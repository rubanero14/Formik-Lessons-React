{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Work Related\\\\Legends Shipping\\\\Formik Lessons React\\\\src\\\\components\\\\YoutubeForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst YoutubeForm = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      channel: \"\",\n      formSubmitted: false\n    },\n    onSubmit: values => {\n      formik.values.formSubmitted = true;\n      console.log(values);\n    },\n    validate: values => {\n      // values.name, values.email, values.channel\n      // errors.name, errors.email, errors.channel\n      // Eg: errors.name = 'Name is required';\n      const errors = {};\n      if (!values.name) {\n        errors.name = \"Name Required\";\n      }\n      if (!values.email) {\n        errors.email = \"Email Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2-4}$/i.test(values.email) // regex algo to validate correct email format\n      ) {\n        errors.email = \"Invalid email format\";\n      }\n      if (!values.channel) {\n        errors.channel = \"Channel Required\";\n      }\n      // Finally returning errors as object of the form field\n      return errors;\n    }\n  });\n  const formIsValid = formik.values.formSubmitted && !(formik.errors.name || formik.errors.email);\n  console.log(\"formik obj: \", formik);\n  console.log(\"formik values: \", formik.values);\n  console.log(\"formik errors: \", formik.errors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Invalid Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Invalid Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channel\",\n        children: \"Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channel\",\n        name: \"channel\",\n        onChange: formik.handleChange,\n        value: formik.values.channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), formik.errors.channel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Invalid Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: formik.handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"output\",\n        children: [\"Name: \", formik.values.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 38\n        }, this), \"Email: \", formik.values.email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 40\n        }, this), \"Channel: \", formik.values.channel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YoutubeForm;\nexport default YoutubeForm;\nvar _c;\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","YoutubeForm","_s","formik","initialValues","name","email","channel","formSubmitted","onSubmit","values","console","log","validate","errors","test","formIsValid","children","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","className","onClick","handleReset","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Work Related/Legends Shipping/Formik Lessons React/src/components/YoutubeForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst YoutubeForm = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      channel: \"\",\r\n      formSubmitted: false,\r\n    },\r\n    onSubmit: (values) => {\r\n      formik.values.formSubmitted = true;\r\n      console.log(values);\r\n    },\r\n    validate: (values) => {\r\n      // values.name, values.email, values.channel\r\n      // errors.name, errors.email, errors.channel\r\n      // Eg: errors.name = 'Name is required';\r\n      const errors = {};\r\n      if (!values.name) {\r\n        errors.name = \"Name Required\";\r\n      }\r\n\r\n      if (!values.email) {\r\n        errors.email = \"Email Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2-4}$/i.test(values.email) // regex algo to validate correct email format\r\n      ) {\r\n        errors.email = \"Invalid email format\";\r\n      }\r\n      if (!values.channel) {\r\n        errors.channel = \"Channel Required\";\r\n      }\r\n      // Finally returning errors as object of the form field\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  const formIsValid =\r\n    formik.values.formSubmitted && !(formik.errors.name || formik.errors.email);\r\n\r\n  console.log(\"formik obj: \", formik);\r\n  console.log(\"formik values: \", formik.values);\r\n  console.log(\"formik errors: \", formik.errors);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.name}\r\n        />\r\n        {formik.errors.name && <div className=\"error\">Invalid Name</div>}\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.errors.email && <div className=\"error\">Invalid Email</div>}\r\n\r\n        <label htmlFor=\"channel\">Channel</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"channel\"\r\n          name=\"channel\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.channel}\r\n        />\r\n        {formik.errors.channel && <div className=\"error\">Invalid Channel</div>}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"reset\" onClick={formik.handleReset}>\r\n          Reset\r\n        </button>\r\n        <hr />\r\n        <br />\r\n        <code className=\"output\">\r\n          Name: {formik.values.name} <br />\r\n          Email: {formik.values.email} <br />\r\n          Channel: {formik.values.channel}\r\n        </code>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default YoutubeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}