{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Work Related\\\\Legends Shipping\\\\Formik Lessons React\\\\src\\\\components\\\\YoutubeForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst YoutubeForm = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      channel: \"\"\n    },\n    onSubmit: values => console.log(values),\n    validate: values => {\n      // values.name, values.email, values.channel\n      // errors.name, errors.email, errors.channel\n      // Eg: errors.name = 'Name is required';\n      const errors = {};\n      if (!values.name) {\n        errors.name = \"Name Required\";\n      }\n      if (!values.email) {\n        errors.email = \"Email Required\";\n      } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/gi.test(values.email) // regex algo to validate correct email format\n      ) {\n        errors.email = \"Invalid email format\";\n      }\n      if (!values.channel) {\n        errors.channel = \"Channel Required\";\n      }\n      // Finally returning errors as object of the form field\n      return errors;\n    }\n  });\n  console.log(\"formik obj: \", formik);\n  console.log(\"formik values: \", formik.values);\n  console.log(\"formik errors: \", formik.errors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: formik.handleChange,\n          value: formik.values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"Invalid Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"Invalid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          onChange: formik.handleChange,\n          value: formik.values.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"Invalid Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          onClick: formik.handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"output\",\n        children: [\"Name: \", formik.values.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 38\n        }, this), \"Email: \", formik.values.email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this), \"Channel: \", formik.values.channel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YoutubeForm;\nexport default YoutubeForm;\nvar _c;\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","YoutubeForm","_s","formik","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","test","children","handleSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","onClick","handleReset","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Work Related/Legends Shipping/Formik Lessons React/src/components/YoutubeForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst YoutubeForm = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      channel: \"\",\r\n    },\r\n    onSubmit: (values) => console.log(values),\r\n    validate: (values) => {\r\n      // values.name, values.email, values.channel\r\n      // errors.name, errors.email, errors.channel\r\n      // Eg: errors.name = 'Name is required';\r\n      const errors = {};\r\n      if (!values.name) {\r\n        errors.name = \"Name Required\";\r\n      }\r\n\r\n      if (!values.email) {\r\n        errors.email = \"Email Required\";\r\n      } else if (\r\n        !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/gi.test(values.email) // regex algo to validate correct email format\r\n      ) {\r\n        errors.email = \"Invalid email format\";\r\n      }\r\n      if (!values.channel) {\r\n        errors.channel = \"Channel Required\";\r\n      }\r\n      // Finally returning errors as object of the form field\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  console.log(\"formik obj: \", formik);\r\n  console.log(\"formik values: \", formik.values);\r\n  console.log(\"formik errors: \", formik.errors);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"error\">Invalid Name</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          />\r\n          {formik.errors.email ? (\r\n            <div className=\"error\">Invalid Email</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"channel\">Channel</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"channel\"\r\n            name=\"channel\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.channel}\r\n          />\r\n          {formik.errors.channel ? (\r\n            <div className=\"error\">Invalid Channel</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"reset\" onClick={formik.handleReset}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n\r\n        <hr />\r\n        <br />\r\n        <code className=\"output\">\r\n          Name: {formik.values.name} <br />\r\n          Email: {formik.values.email} <br />\r\n          Channel: {formik.values.channel}\r\n        </code>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default YoutubeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}